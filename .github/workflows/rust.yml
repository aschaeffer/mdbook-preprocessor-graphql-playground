name: Rust

on:
  push:
    branches: [ main ]
    paths:
      - "src/**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - "CHANGELOG.md"
      - ".github/workflows/rust.yml"
  pull_request:
    branches: [ main ]
    paths:
      - "src/**/*.rs"
      - "Cargo.toml"
      - "Cargo.lock"
      - "CHANGELOG.md"
      - ".github/workflows/rust.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
  CARGO_TERM_COLOR: always
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  formatting:
    name: Verify code formatting
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --all -- --check
  check_changelog:
    name: Check Changelog
    runs-on: ubuntu-22.04
    steps:
      - uses: tarides/changelog-check-action@v3
        with:
          changelog: CHANGELOG.md
    if: github.actor != 'dependabot[bot]'
  lint:
    name: Lint
    needs: [ formatting, check_changelog ]
    if: always() && (!contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled'))
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - uses: mozilla-actions/sccache-action@v0.0.6
      - run: cargo clippy
  build:
    name: Build and test
    runs-on: ubuntu-22.04
    needs: [ lint ]
    if: always() && (!contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled'))
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - uses: mozilla-actions/sccache-action@v0.0.6
      - run: cargo build --release --verbose
      - run: cargo test --release --verbose
